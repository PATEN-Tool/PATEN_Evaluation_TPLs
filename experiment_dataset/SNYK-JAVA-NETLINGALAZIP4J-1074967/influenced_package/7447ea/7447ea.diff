diff --git a/src/main/java/net/lingala/zip4j/ZipFile.java b/src/main/java/net/lingala/zip4j/ZipFile.java
index 3056d375..1a09eb96 100755
--- a/src/main/java/net/lingala/zip4j/ZipFile.java
+++ b/src/main/java/net/lingala/zip4j/ZipFile.java
@@ -118,13 +118,26 @@ public ZipFile(String zipFile, char[] password) {
    * Creates a new Zip File Object with the input file.
    * If the zip file does not exist, it is not created at this point.
    *
-   * @param zipFile
+   * @param zipFile file reference to the zip file
+   * @throws IllegalArgumentException when zip file parameter is null
    */
   public ZipFile(File zipFile) {
     this(zipFile, null);
   }
 
+  /**
+   * Creates a new Zip File Object with the input file.
+   * If the zip file does not exist, it is not created at this point.
+   *
+   * @param zipFile file reference to the zip file
+   * @param password password to use for the zip file
+   * @throws IllegalArgumentException when zip file parameter is null
+   */
   public ZipFile(File zipFile, char[] password) {
+    if (zipFile == null) {
+      throw new IllegalArgumentException("input zip file parameter is null");
+    }
+
     this.zipFile = zipFile;
     this.password = password;
     this.runInThread = false;
diff --git a/src/test/java/net/lingala/zip4j/ZipFileTest.java b/src/test/java/net/lingala/zip4j/ZipFileTest.java
index 8aa785f3..8cea3bd4 100644
--- a/src/test/java/net/lingala/zip4j/ZipFileTest.java
+++ b/src/test/java/net/lingala/zip4j/ZipFileTest.java
@@ -34,6 +34,22 @@ public void setup() {
     zipFile = new ZipFile(sourceZipFile);
   }
 
+  @Test
+  public void testZipFileConstructorThrowsIllegalArgumentExceptionWhenFileParameterIsNull() {
+    expectedException.expect(IllegalArgumentException.class);
+    expectedException.expectMessage("input zip file parameter is null");
+
+    new ZipFile((File) null);
+  }
+
+  @Test
+  public void testZipFileConstructorWithPasswordThrowsIllegalArgumentExceptionWhenFileParameterIsNull() {
+    expectedException.expect(IllegalArgumentException.class);
+    expectedException.expectMessage("input zip file parameter is null");
+
+    new ZipFile((File) null, "password".toCharArray());
+  }
+
   @Test
   public void testCreateZipFileThrowsExceptionWhenZipFileExists() throws ZipException {
     reset(sourceZipFile);