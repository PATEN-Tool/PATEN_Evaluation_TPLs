diff --git a/src/query/expression/ExpressionIterator.java b/src/query/expression/ExpressionIterator.java
index d090382bfb..d7dcfececd 100644
--- a/src/query/expression/ExpressionIterator.java
+++ b/src/query/expression/ExpressionIterator.java
@@ -338,9 +338,9 @@ public ExpressionDataPoint[] next(final long timestamp) {
       }
       final Object output = expression.execute(context);
       if (output instanceof Double) {
-        result = (Double) expression.execute(context);
+        result = (Double) output;
       } else if (output instanceof Boolean) {
-        result = (((Boolean) expression.execute(context)) ? 1 : 0);
+        result = (((Boolean) output) ? 1 : 0);
       } else {
         throw new IllegalStateException("Expression returned a result of type: " 
             + output.getClass().getName() + " for " + this);
@@ -465,7 +465,15 @@ public void next(final int i) {
         }
       }
     }
-    result = (Double)expression.execute(context);
+    final Object output = expression.execute(context);
+    if (output instanceof Double) {
+      result = (Double) output;
+    } else if (output instanceof Boolean) {
+      result = (((Boolean) output) ? 1 : 0);
+    } else {
+      throw new IllegalStateException("Expression returned a result of type: " 
+          + output.getClass().getName() + " for " + this);
+    }
     dps[i].reset(ts, result);
   }
   